// Author   : Joe Pickering, 25/11/11
// For      : BizClik Media - Dashboard Project.
// Contact  : joe.pickering@hotmail.co.uk

using System;
using System.IO;
using System.Drawing;
using System.Collections;
using System.Data;
using System.Web;
using System.Web.Mail;
using System.Web.UI;
using System.Web.UI.WebControls;
using Telerik.Web.UI;
using System.Text;

public partial class FinanceAlertMailer : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            CheckAndSendReminders();
            Response.Redirect("~/Default.aspx");
        }
    }

    // General
    public override void VerifyRenderingInServerForm(Control control)
    {
        /* Verifies that the control is rendered */
    }
    protected void CheckAndSendReminders()
    {
        try
        {
            String qry = "SELECT * FROM db_financereminders WHERE ReminderSent=0 AND ReminderTime BETWEEN DATE_ADD(NOW(), INTERVAL -1 DAY) AND DATE_ADD(NOW(), INTERVAL 5 MINUTE)";
            DataTable dt_reminders = SQL.SelectDataTable(qry, null, null);

            if (dt_reminders.Rows.Count > 0)
            {
                for (int i = 0; i < dt_reminders.Rows.Count; i++)
                {
                    String reminder = dt_reminders.Rows[i]["ReminderText"].ToString().Replace("'", "").Replace(Environment.NewLine, "<br/>")
                    + "<br/><br/>Reminder set by <b>" + dt_reminders.Rows[i]["AddedBy"]
                    + "</b> for <b>" + dt_reminders.Rows[i]["ReminderTime"].ToString().Replace("'", "") + "</b>.";

                    MailMessage mail = new MailMessage();
                    mail = Util.EnableSMTP(mail);
                    mail.To = dt_reminders.Rows[i]["ReminderRecipients"].ToString();
                    mail.From = "no-reply@bizclikmedia.com";
                    if (Security.admin_receives_all_mails)
                        mail.Bcc = Security.admin_email;
                    mail.Subject = "*Finance Reminder/Alert*";
                    mail.BodyFormat = MailFormat.Html;
                    mail.Body = "<table style=\"font-family:Verdana; font-size:8pt;\"><tr><td><h5>Finance Reminder/Alert from " + dt_reminders.Rows[i]["AddedBy"] + " - " + DateTime.Now + " (GMT)</h5>";
                    mail.Body += reminder +
                    "<br/><hr/>This is an e-mail alert generated by " + dt_reminders.Rows[i]["AddedBy"] + " from the Dashboard Finance Sales page." +
                    "<br><br>This message contains confidential information and is intended only for the " +
                    "individual named. If you are not the named addressee you should not disseminate, distribute " +
                    "or copy this e-mail. Please notify the sender immediately by e-mail if you have received " +
                    "this e-mail by mistake and delete this e-mail from your system. E-mail transmissions may contain " +
                    "errors and may not be entirely secure as information could be intercepted, corrupted, lost, " +
                    "destroyed, arrive late or incomplete, or contain viruses. The sender therefore does not accept " +
                    "liability for any errors or omissions in the contents of this message which arise as a result of " +
                    "e-mail transmission.</td></tr></table>";

                    try
                    {
                        SmtpMail.Send(mail);
                        Util.WriteLogWithDetails("Mailing of reminder_id: " + dt_reminders.Rows[i]["ReminderID"] + " successful to " + dt_reminders.Rows[i]["ReminderRecipients"].ToString(), "mailer_financealerts_log");

                        String uqry = "UPDATE db_financereminders SET ReminderSent=1 WHERE ReminderID=@r_id";
                        SQL.Update(uqry, "@r_id", dt_reminders.Rows[i]["ReminderID"]);
                    }
                    catch (Exception r) 
                    {
                        Util.WriteLogWithDetails("Error Mailing reminder_id: " + dt_reminders.Rows[i]["ReminderID"] + " - " + r.Message, "mailer_financealerts_log"); 
                    }
                }
            }
        }
        catch { } // catch as this will be run every minute and need to ensure disconnect occurs
    }
}